<!-- Will be the URL -->
<div id="class-scroller-container">

		<!-- Call each Section now-->
		<div class="float-down-zero" id="class-scroller-container-zero">
		<!--<ul id="class-scroller"> -->
		<script type="text/javascript">
			$(document).ready(function() {
				$("<%= @clazz.sections.collect {|x| "#section-scroll-#{x.id}" }.join(',')  %>").sortable({
					revert: true,
					containment: "#class-scroller-container-zero",
					connectWith: ".sections-scroll",
					cancel: ".mini-box-add, .draggable-false"
				}).bind( "sortreceive", function(event, ui) {
					//Make async call to backend updating the item and change the color.
					var item = ui.item;
					var parent = ui.item.parent();
					if(parent.children().last().attr("data-page-id") === item.attr("data-page-id")) {
						$("#page-add-"+parent.attr('data-scroll-id')).appendTo(parent)
					}
					item.css('background', ui.item.parent().attr('data-color'));	
					getIt(item)
				}).bind( "sortout", function(event, ui) {
					//debugger;
				});
			});

			function getIt(item) {
				$.ajax({
					type: "PUT",
					url: "/pages/" + item.attr('data-page-id'),
					contentType: "application/json",
					dataType: "JSON",
					data: JSON.stringify({"section_id": item.parent().attr('data-scroll-id')}),
					beforeSend: function ( xhr ) {
				    xhr.setRequestHeader("Accept", "text/javascript");
				  }
				}).done(function ( data ) {
				  
				});			
				$.ajaxSettings.accepts.html = $.ajaxSettings.accepts.script;		
			}
	</script>
		<%= render :partial => "sections/section_scroll", :collection => @clazz.sections %>
		<!--</ul> -->
		</div>
</div>
<section id="content" class="content-class">
	<div id="notice"><%= notice %></div>

	<script type="text/javascript">
	$(document).ready(function() {



	});
	</script>
	<div id="page-canvas" class="center">
		<script type="text/javascript">
			$('#left-nav').css('background-color', '<%= @color[:color] %>')
			$('#header-page-name').text("<%= @current_page.title %>")
		</script>
		<%= render :partial => "entries/entry", :collection => @current_page.entries, :locals => { :color => @current_page.section.color[:color] } %>
	</div>
	<!-- Not sure about container, but this is where the page canvas will go-->
</div>